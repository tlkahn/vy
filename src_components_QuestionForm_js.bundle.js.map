{"version":3,"file":"src_components_QuestionForm_js.bundle.js","mappings":"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","sources":["webpack://vy/./src/components/QuestionForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useChat } from '../context/ChatContext'; // Adjust the path as needed\nimport PropTypes from 'prop-types';\nimport log from 'loglevel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons';\nimport { faTimeline, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst QuestionForm = ({ toggleModal }) => {\n  const [userQuestion, setUserQuestion] = useState('');\n  const modalRef = useRef(); // Ref for the modal container\n  const containerRef = useRef(); // Ref for the modal container\n  const { chatroomChannelRef, messages } = useChat();\n\n  const handleQuestionSubmit = (e) => {\n    e.preventDefault();\n    chatroomChannelRef.current.speak(userQuestion);\n    setUserQuestion('');\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !containerRef.current.contains(event.target)) {\n        toggleModal(false); // Assuming toggleModal can accept a boolean to show/hide\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [toggleModal]); // Add toggleModal to the dependencies array if it changes\n\n  useEffect(() => {\n    log.info({ messages });\n  }, [messages]);\n\n  return (\n    <>\n      <div\n        ref={modalRef}\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center\"\n      >\n        <div\n          ref={containerRef}\n          className=\"bg-gray-700 p-5 rounded-lg question-form-container\"\n        >\n          <div className=\"question-history bg-gray-600 p-4 mb-4 rounded overflow-auto max-h-40\">\n            {messages &&\n              messages.map((m, index) => (\n                <div key={index} className=\"text-white mb-2 last:mb-0\">\n                  {m.content}\n                </div>\n              ))}\n          </div>\n          <form\n            onSubmit={handleQuestionSubmit}\n            className=\"question-form-input my-4 flex\"\n          >\n            <input\n              type=\"text\"\n              value={userQuestion}\n              onChange={(e) => setUserQuestion(e.target.value)}\n              placeholder=\"Ask a question...\"\n              className=\"text-black flex-grow p-2\"\n            />\n            <button type=\"submit\" className=\"ml-2 p-2\">\n              <FontAwesomeIcon icon={faPaperPlane} />\n            </button>\n          </form>\n        </div>\n        <button onClick={toggleModal} className=\"absolute top-0 right-0 p-4\">\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n    </>\n  );\n};\n\nQuestionForm.propTypes = {\n  toggleModal: PropTypes.func.isRequired, // Validate src prop\n};\n\nexport default QuestionForm;\n"],"names":["React","useState","useRef","useEffect","useChat","PropTypes","log","FontAwesomeIcon","faPaperPlane","faTimeline","faTimes","QuestionForm","_ref","toggleModal","_useState","_useState2","_slicedToArray","userQuestion","setUserQuestion","modalRef","containerRef","_useChat","chatroomChannelRef","messages","handleQuestionSubmit","e","preventDefault","current","speak","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","info","createElement","Fragment","ref","className","map","m","index","key","content","onSubmit","type","value","onChange","placeholder","icon","onClick","propTypes","func","isRequired"],"sourceRoot":""}